{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACT,IAAMC,EAAU,CAAET,WAAUC,SACxBI,EACFF,EAAQM,GAERL,EAAOK,E,GAERR,E,IAIUS,SAASC,cAAc,SAE/BC,iBAAiB,UAE1B,SAA0BC,GACxBA,EAAEC,iBAMF,IAJA,IAAMC,GAASF,EAAEG,cAAcC,SAAShB,MAAMiB,MACxCC,GAAQN,EAAEG,cAAcC,SAASE,KAAKD,MACtCE,GAAUP,EAAEG,cAAcC,SAASG,OAAOF,MAEvCG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAG/BtB,EAAcsB,EAFEN,EAAQM,EAAIF,GAGzBG,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBJ,EAAA2B,OAAOC,QAAQ,uBAA4CC,OAAnB1B,EAAW,EAAE,QAAY0B,OAANzB,EAAM,M,IAElE0B,OAAM,SAAAJ,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBJ,EAAA2B,OAAOI,QAAQ,sBAAyCF,OAAnB1B,EAAW,EAAE,QAAY0B,OAANzB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      const promise = { position, delay };\n      if (shouldResolve) {\n        resolve(promise);\n      } else {\n        reject(promise);\n      }\n    }, delay);\n  });\n}\n\nconst formElem = document.querySelector('.form');\n\nformElem.addEventListener('submit', onFormElemSubmit);\n\nfunction onFormElemSubmit(e) {\n  e.preventDefault();\n\n  const delay = +e.currentTarget.elements.delay.value;\n  const step = +e.currentTarget.elements.step.value;\n  const amount = +e.currentTarget.elements.amount.value;\n\n  for (let i = 0; i < amount; i++) {\n    const myDelay = delay + i * step;\n\n    createPromise(i, myDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","promise","document","querySelector","addEventListener","e","preventDefault","delay1","currentTarget","elements","value","step","amount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.78f552fb.js.map"}